(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{440:function(t,s,a){"use strict";a.r(s);var n=a(26),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"coding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#coding"}},[t._v("#")]),t._v(" coding")]),t._v(" "),a("h3",{attrs:{id:"注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),a("p",[t._v("高亮注释，也可特别做函数注释，入参类型和默认值也可以按照这样规范写注释。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @method 超出行显示省略号\n * @param {string} contextClass 超出行显示省略号\n * @param {number} [lineNum=2] 第几行需要省略号\n * @param {number} [lineHeight=28] 行高\n * @param {number} [safeNum=30] 用于提高dom操作性能，每行安全的字符数，如30，2行，不会检查30*2以内的字符是否需要填充‘...’\n * @return null 返回值说明\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("dot")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("contextClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lineNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lineHeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" safeNum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    lineNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lineNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    lineHeight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lineHeight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v("\n    safeNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lineHeight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"eslint全局变量忽略检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint全局变量忽略检查"}},[t._v("#")]),t._v(" eslint全局变量忽略检查")]),t._v(" "),a("h4",{attrs:{id:"全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局变量"}},[t._v("#")]),t._v(" 全局变量")]),t._v(" "),a("p",[t._v("Eslint 全局变量未定义报错，在用的时候 前面加一个注解就不报错了")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* global $ */")]),t._v("\n")])])]),a("h3",{attrs:{id:"eslint单文件忽略检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint单文件忽略检查"}},[t._v("#")]),t._v(" eslint单文件忽略检查")]),t._v(" "),a("p",[t._v("文件最前面增加 /* eslint-disable */")]),t._v(" "),a("h4",{attrs:{id:"script标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script标签"}},[t._v("#")]),t._v(" script标签")]),t._v(" "),a("p",[t._v("Js字符串显示，直接写"),t._v("会提前结束script标签；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译的时会被正确解析，但eslint会报没有必要转义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\<\\/script>'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用’<’+’/script>’编译的时会被正确解析，eslint也不会报错")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/script>'")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);